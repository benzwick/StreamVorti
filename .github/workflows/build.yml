# GitHub Actions workflow for building StreamVorti with MFEM
#
# This workflow builds StreamVorti with MFEM and dependencies from source.
#
# WHAT IS CACHED:
# - HYPRE: Built library in install directory
# - METIS: Built library files
# - MFEM: Complete installation in /opt/mfem/
# - ccache: Compiler cache (via hendrikmuhs/ccache-action)
#
# WHAT IS NOT CACHED:
# - StreamVorti executables (rebuilt each run to test the build)
# - System packages from apt-get
#
# TRIGGERS:
# - Manual workflow_dispatch
# - Push to main branch
# - Pull requests to main branch
#
# Based on official MFEM workflows and actions:
# - https://github.com/mfem/mfem/blob/master/.github/workflows/builds-and-tests.yml
# - https://github.com/mfem/github-actions/blob/master/build-mfem/action.yml
# - https://github.com/mfem/github-actions/blob/master/build-hypre/action.yml
# - https://github.com/mfem/github-actions/blob/master/build-metis/action.yml
# - https://github.com/mfem/mfem/blob/master/INSTALL

name: Build StreamVorti

on:
  workflow_dispatch:
  push:
    branches: [ main]
  pull_request:
    branches: [ main ]

# With caching this workflow typically takes less than 5 minutes to run
# so we don't need to limit concurrency too much.
# concurrency:
#   group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
#   cancel-in-progress: true

env:
  HYPRE_URL: 'https://github.com/hypre-space/hypre/archive'
  HYPRE_ARCHIVE: v2.19.0
  HYPRE_TOP_DIR: hypre-2.19.0
  METIS_URL: 'https://mfem.github.io/tpls'
  METIS_ARCHIVE: metis-4.0.3.tar.gz
  METIS_TOP_DIR: metis-4.0.3
  MFEM_TOP_DIR: mfem-4.8

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install system dependencies
      run: ./scripts/build-from-source/01-install-system-dependencies.sh

    - name: Setup ccache and create Eigen symlinks
      run: ./scripts/build-from-source/02-setup-ccache.sh

    - name: Setup ccache
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        key: ${{ runner.os }}-build-ccache
        max-size: "2G"
        verbose: 2

    # Build HYPRE (required for parallel MFEM)
    - name: Cache HYPRE build
      id: cache-hypre
      uses: actions/cache@v3
      with:
        path: |
          ${{ env.HYPRE_TOP_DIR }}/install
        key: ${{ env.HYPRE_TOP_DIR }}-${{ runner.os }}

    - name: Build HYPRE
      if: steps.cache-hypre.outputs.cache-hit != 'true'
      run: ./scripts/build-from-source/03-build-hypre.sh "${{ env.HYPRE_URL }}" "${{ env.HYPRE_ARCHIVE }}" "${{ env.HYPRE_TOP_DIR }}"

    # Build METIS (optional but recommended for MFEM)
    - name: Cache METIS build
      id: cache-metis
      uses: actions/cache@v3
      with:
        path: |
          ${{ env.METIS_TOP_DIR }}/libmetis.a
          ${{ env.METIS_TOP_DIR }}/Lib
        key: ${{ env.METIS_TOP_DIR }}-${{ runner.os }}

    - name: Build METIS
      if: steps.cache-metis.outputs.cache-hit != 'true'
      run: ./scripts/build-from-source/04-build-metis.sh "${{ env.METIS_URL }}" "${{ env.METIS_ARCHIVE }}" "${{ env.METIS_TOP_DIR }}"

    # Build MFEM with all dependencies
    - name: Cache MFEM build
      id: cache-mfem
      uses: actions/cache@v3
      with:
        path: /opt/mfem/${{ env.MFEM_TOP_DIR }}
        key: ${{ env.MFEM_TOP_DIR }}-hypre-metis-${{ runner.os }}

    - name: Build and install MFEM 4.8
      if: steps.cache-mfem.outputs.cache-hit != 'true'
      run: ./scripts/build-from-source/05-build-mfem.sh "${{ env.MFEM_TOP_DIR }}" "${{ env.HYPRE_TOP_DIR }}" "${{ env.METIS_TOP_DIR }}" "/opt/mfem/${{ env.MFEM_TOP_DIR }}"

    - name: Build StreamVorti
      run: ./scripts/build-from-source/06-build-streamvorti.sh "/opt/mfem/${{ env.MFEM_TOP_DIR }}" "Release"

    - name: Display ccache statistics
      run: |
        ccache -s
        echo "Cache hit rate information:"
        ccache --show-stats

    - name: Run tests
      run: ./scripts/build-from-source/07-run-ctest.sh build

    - name: Check built artifacts
      run: ./scripts/build-from-source/08-check-built-artifacts.sh build

    - name: Run test examples
      run: ./scripts/build-from-source/09-run-example-tests.sh "$GITHUB_WORKSPACE/build/MfemRun" "$GITHUB_WORKSPACE/build/StreamVorti"
